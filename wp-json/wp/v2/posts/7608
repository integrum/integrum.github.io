{"id":7608,"date":"2014-06-05T06:00:32","date_gmt":"2014-06-05T13:00:32","guid":{"rendered":"http:\/\/integrumtech.com\/?p=7608"},"modified":"2015-04-09T05:31:44","modified_gmt":"2015-04-09T05:31:44","slug":"episode-138-principles-practices","status":"publish","type":"post","link":"http:\/\/integrumtech.com\/2014\/06\/episode-138-principles-practices\/","title":{"rendered":"Episode #138 &#8211; Principles or Practices"},"content":{"rendered":"<p>Derek Neighbors, Jade Meskill, Clayton Lengel-Zigich, and Roy van de Water discuss:<\/p>\n<ul>\n<li>What is more important, principles or practices?<\/li>\n<\/ul>\n<p><em>Transcript<\/em><\/p>\n<p><strong>Jade Meskill<\/strong>: \u00a0Hello welcome to another episode of Agile weekly podcast. I am Jade Meskill.<\/p>\n<p><strong>Roy van de Water<\/strong>: \u00a0I am Roy van de Water.<\/p>\n<p><strong>Derek Neighbors<\/strong>: \u00a0I am Derek Neighbors.<\/p>\n<p><strong>Clayton Lengel\u2011Zigich<\/strong>: \u00a0I am Clayton Lengel\u2011Zigich.<\/p>\n<p><strong>Jade<\/strong>: \u00a0Guys, I wanted to talk today on what is more important, principles or practices?<\/p>\n<p><strong>Roy<\/strong>: \u00a0Explain?<\/p>\n<p><strong>Derek<\/strong>: \u00a0Or use it in a sentence.<\/p>\n<p>[laughter]<\/p>\n<p><strong>Jade<\/strong>: \u00a0What is more important, principles or practices? Dealing with a lot of teams, I&#8217;ve seen Agile presented in many different ways.<\/p>\n<p>Sometimes it is very process focused and practice focused, sometimes it&#8217;s about the principles without a lot of either prescriptive ideas of how process or practices would work like how do you get the best results from a team? What&#8217;s more important focusing on the principles or focusing on the practices?<\/p>\n<p><strong>Derek<\/strong>: \u00a0This is a faith versus works question \u2011\u2011 and loaded.<\/p>\n<p><strong>Jade<\/strong>: \u00a0It sure is.<\/p>\n<p><strong>Clayton<\/strong>: \u00a0I view myself as a principles kind of guy. In this context, the practices are something that you could do probably quick, but for them to have long\u2011lasting impact or to make more sense so people understand why they might be doing these practices, you do need the principles.<\/p>\n<p>To answer your question, you need both of them.<\/p>\n<p><strong>Jade<\/strong>: \u00a0It depends. Is that right? [laughs]<\/p>\n<p><strong>Roy<\/strong>: \u00a0Yes. It depends on the level of team you&#8217;re applying them to. It is extremely important to have principles from the very beginning. If you rely only on principles, it&#8217;s very difficult for novices to be able to do much with raw principles.<\/p>\n<p>If I say, &#8220;Lying is bad. Don&#8217;t lie.&#8221; But you have no experience with what lying even is. Is a white lie OK? \u2011\u2011 all of these nuanced things. You might be able to say, &#8221;I know lying&#8217;s bad, but I got put in this situation. I don&#8217;t know what to do with it.&#8221;<\/p>\n<p>I do the wrong thing even though I have the principle, because I don&#8217;t understand how the principle works. I tend to find that principles are very short, concrete things that have a lot of nuance.<\/p>\n<p>The only way to develop the skill of what is in that nuance is to have a whole lot of practice. With novices, it&#8217;s very important to put the guide rails on. To say like do this thing, almost cargo cult it to a certain degree like do this thing, but reinforce the principle behind why you&#8217;re doing that thing.<\/p>\n<p>Once you understand the classic Miyagi&#8217;s son like wax the car, wax on, wax off. I don&#8217;t know why I&#8217;m waxing on. I don&#8217;t know why I wax off. I don&#8217;t know why I&#8217;m painting the fence. It seems kind of frustrating.<\/p>\n<p>You tell me that I&#8217;m going to be this really great karate fighter someday but I don&#8217;t get it because it doesn&#8217;t make a whole lot of sense. Then at that one moment that you know that I have enough practice under my boat, you can show me how it relates to the principle in a meaningful way and it kind of clicks.<\/p>\n<p>From that point forward, I can let the practice be more dynamic to the situation. I think a lot of it depends of what level you&#8217;re at. It&#8217;s very difficult to teach principles without introducing some form of practice. It&#8217;s very dangerous to only focus on practice and not have people understand the principles behind the practices.<\/p>\n<p><strong>Jade<\/strong>: \u00a0It sounds to me like you&#8217;re describing a balance or attention between those two. How do you know when is the right&#8230;what&#8217;s the right balance for the right team? How do you gauge that?<\/p>\n<p><strong>Derek<\/strong>: \u00a0Let me give you the answer that will work for everybody. I don&#8217;t have it.<\/p>\n<p>[laughter]<\/p>\n<p><strong>Derek<\/strong>: \u00a0That&#8217;s going to be something that is worn out of experience, but that&#8217;s the troubles. You don&#8217;t have the experience to make that call yet.<\/p>\n<p><strong>Jade<\/strong>: \u00a0If you&#8217;re a coach or you&#8217;re a score master, you&#8217;re performing some role with that team and expected to guide them in some way. How do you figure out where to push and where to pull?<\/p>\n<p><strong>Derek<\/strong>: \u00a0One of the metrics that we&#8217;ve used is kind of what we have mentioned in the past. We&#8217;ve always said like a team should always insist on pairing on production code. We&#8217;d be prescriptive to say that all code is paired.<\/p>\n<p>As soon as you stop getting pushed back from the team when they are insisting that all coach to be prepared and they want to do it that way. It&#8217;s like when they&#8217;re ready to start breaking the rules.<\/p>\n<p>It&#8217;s when they don&#8217;t want to break the rules anymore is an indicator that they may be mature enough to start thinking about the rules.<\/p>\n<p><strong>Clayton<\/strong>: \u00a0In that example&#8230;I had this exact scenario where there was some problem with the team where some people maybe new something about the system or someone broke something about the system and never understood. The principle there might be collective code ownership. You can&#8217;t just say that and say &#8220;OK, you now collectively own the code.&#8221;<\/p>\n<p><strong>Jade<\/strong>: \u00a0We all own the code, what are you talking about?<\/p>\n<p><strong>Clayton<\/strong>: \u00a0Yes, exactly. It&#8217;s just that doesn&#8217;t make sense. I think pretty easy go to like a great way to get that, to apply that principle is pair\u2011programming.<\/p>\n<p>That&#8217;s a practice. The way that I&#8217;ve seen pairing and to be introduced without the principles behind it, if the people in the team aren&#8217;t very open to try new things or maybe change in the way they work or not used to that sort of thing then they want to throw it away.<\/p>\n<p>I feel once they throw their practices away even if you come back with the principle and say, &#8220;No, you don&#8217;t understand. See this is why we&#8217;re doing this.&#8221; It&#8217;s kind of like, &#8220;Yeah I don&#8217;t want to do that anymore.&#8221;<\/p>\n<p><strong>Roy<\/strong>: \u00a0Right. That worked for Danielson in the movies but that doesn&#8217;t work so well in real life.<\/p>\n<p><strong>Derek<\/strong>: \u00a0Like a good example, I saw even though this is weak in some interactions, pairing is good in all but we don&#8217;t feel a need to pair on the easy stuff.<\/p>\n<p>It&#8217;s like that&#8217;s an easy trap to fall into. It&#8217;s not that hard so why are you pairing? We were pairing because when we&#8217;re doing hard stuff we want more than one person because two minds are better than one.<\/p>\n<p>I don&#8217;t anywhere see kind of the two minds are better than one. Maybe in doing things in teams but sort of that I am not seeing the technical practice as of two people is better as one is like an over\u2011arching principle per say.<\/p>\n<p>I think doing working teams is kind of is. Maybe there&#8217;s a false in that a bit but my question would be is it about everybody owning the code.<\/p>\n<p>In which case shouldn&#8217;t everybody own the simple code too? If we start to look at what does automation look like?<\/p>\n<p>If it&#8217;s so simple that anybody can do it could you automate it? I think it starts when you have a little bit more depth into the principle of like why do we pair? We pair because we want to work in teams and we pair because we want collective code ownership, we pair because and you list off five or six principals.<\/p>\n<p>Then when somebody says, &#8220;Hey I don&#8217;t want to pair on the hard stuff.&#8221; It&#8217;s like, &#8220;OK.&#8221; Well maybe that solves the &#8220;We do difficult work in small teams.&#8221; Maybe that applies but then how do we still have collective code ownership if we&#8217;re doing that.<\/p>\n<p>I think its understanding that there is depth to principles. It&#8217;s not one practice aligned to a single principle more often than not it&#8217;s a practice might aligned to three or four different principles. When people try to tweak them, it&#8217;s like, &#8220;Well I&#8217;m tweaking at this because I don&#8217;t really&#8230;&#8221;<\/p>\n<p>Tweaking it this way doesn&#8217;t invalidate that principle but it might invalidate some other principle. I think that&#8217;s why it&#8217;s important to know those.<\/p>\n<p>I think that when people know them that&#8217;s why they don&#8217;t want to throw their practices away because they know they are getting more than just the surface bang for the buck.<\/p>\n<p><strong>Jade<\/strong>: \u00a0How do you get teams to understand that?<\/p>\n<p>We&#8217;ve seen a lot. We&#8217;ve seen a lot of people reject a lot of practices that we know are good for them but they don&#8217;t understand it yet.<\/p>\n<p><strong>Derek<\/strong>: \u00a0I think sometimes you have to&#8230;I don&#8217;t want to say enforce them to do the practice, but I think you have to strongly encourage them to do the practice for some length of time so that they can start to see the benefits and start to see the depth of it.<\/p>\n<p>When they throw them away they come back to them because they realize what their losing. If I&#8217;m pairing all the time and I get all the benefits of pairing all the time. I decide to lax out and not pair on the hard stuff or not pair. I start to get bit by bit those other things and somebody from an outside view point can say, &#8220;Man it doesn&#8217;t look like this is working out so well for you.&#8221;<\/p>\n<p>Then somebody&#8217;s like, &#8220;Oh well, that&#8217;s because so and so did that in the corner and blah blab and I didn&#8217;t like the way they implement it.&#8221;<\/p>\n<p>It&#8217;s like, &#8220;How come you didn&#8217;t know the way they implemented it?&#8221; &#8220;We don&#8217;t pair on the hard stuff.&#8221; &#8220;Oh.&#8221; &#8220;In the easy stuff.&#8221; &#8220;Oh.&#8221; Tell me more about that right?<\/p>\n<p>It gets to be able to re\u2011frame that but if you say, &#8220;I don&#8217;t like paring so I&#8217;m not going to pair.&#8221; You never are going to understand the values of the principles for that practice.<\/p>\n<p><strong>Clayton<\/strong>: \u00a0There&#8217;s a lot to be said for having the ability and I think a lot of it comes from experience to be able to identify some particular patters or problems that the team might be having and say, &#8220;OK, well he&#8217;s pairing again.&#8221;<\/p>\n<p>If the team were doing more pairing this would be less of a problem or it would help them come to a better solution on their own.<\/p>\n<p>Having that experience to be able to suggest those things and having a time boxed length of time that people could try new things. I think that goes a long way. I don&#8217;t know how that works with principles though.<\/p>\n<p><strong>Roy<\/strong>: \u00a0You can&#8217;t time box principles forever?<\/p>\n<p><strong>Clayton<\/strong>: \u00a0Well I think they are so abstract, they are too high level.<\/p>\n<p><strong>Roy<\/strong>: \u00a0We were going to have collective code ownership for the next two weeks and then maybe we won&#8217;t collectively own the program anymore.<\/p>\n<p><strong>Clayton<\/strong>: \u00a0Yeah, but that feels wired right?<\/p>\n<p><strong>Roy<\/strong>: \u00a0Right<\/p>\n<p><strong>Jade<\/strong>: \u00a0What happens if you only see the practices and you don&#8217;t understand the philosophy that is driving those things?<\/p>\n<p><strong>Clayton<\/strong>: \u00a0At a certain point you probably start cargo\u2011culting and if you don&#8217;t understand the philosophy.<\/p>\n<p>I don&#8217;t know any off the top of my head, but there are times where there practices that frequently work towards a particular philosophy or principle will work against it when applied incorrectly. We see that all the time when you throw out the baby with the bath water.<\/p>\n<p><strong>Derek<\/strong>: \u00a0I don&#8217;t know if I fully agree with that. More often than not even when people do a fair amount of cargo culting their still way better off than they were doing nothing or doing what they were before.<\/p>\n<p>What you tend to see is you either see a plateau. If I cargo\u2011cult something like a stand\u2011up or something, it&#8217;s still way better that I spend 10 minutes talking with the team rather than never ever talking to the team.<\/p>\n<p>I&#8217;m going to hit a plateau that only takes me&#8230;I only get so much benefit for that and then it flattens off. It feels like I might be doing more damage even though in reality it&#8217;s still better than it was, or what you&#8217;ll see is you&#8217;ll see practices get abandoned fairly quick because they don&#8217;t understand the benefit or the reasons for it.<\/p>\n<p><strong>Jade<\/strong>: \u00a0We&#8217;ve dealt with some teams recently that have adopted many of the surface\u2011level &#8220;Agile practices&#8221; but are lacking in the philosophy of that. Agile has become their weapon to use against other people who want things from them.<\/p>\n<p><strong>Derek<\/strong>: \u00a0I think that&#8217;s a good example of when you don&#8217;t understand the principles you can&#8217;t introspect. You can&#8217;t have self\u2011awareness about how effectively you are using them. You can&#8217;t improve those things. That&#8217;s a big thing.<\/p>\n<p>If it&#8217;s only a practice that you know or you only know the practice, then it&#8217;s only going to take you so far. You can&#8217;t ever look and say, &#8220;The principle of why I&#8217;m doing this is to achieve some end goal or end state or whatever other philosophy.&#8221; How could I change my practice or improve my practice or alter it somehow and have a different&#8230;? You don&#8217;t have that.<\/p>\n<p><strong>Roy<\/strong>: \u00a0I think the big thing in the practice is that each of these practices when applied, especially initially, cause some amount of pain.<\/p>\n<p>If you don&#8217;t understand the philosophy of what you are trying to accomplish with the practice, you start altering the practice and minimize the pain. You bastardize the practice to a form where it no longer delivers the value that was originally intended.<\/p>\n<p><strong>Derek<\/strong>: \u00a0I would say in the example you&#8217;re giving that the people having to work with that team or that organization that is adopting those practices are in as much pain as they were before that team adopted those practices. While people could make fun of the practices right now, the reality is people were not happy with the way it worked before those practices came in.<\/p>\n<p>If you went to those teams, they&#8217;ve seen some benefit internally to themselves. They&#8217;ve seen a lot of detriment to themselves as well, but Roy you&#8217;re absolutely right. What happens is they adopt the practices at a base level, a cargo\u2011culting level. They get a minor bump in a lot of things that they didn&#8217;t have before, but it&#8217;s really painful.<\/p>\n<p>Then they start to bastardize the practices in ways that violate the principles to reduce the pain. That&#8217;s the danger of not having the principles at all. When it gets painful, if you can look back to the principle and say, &#8220;Oh, I want to turn the dial back the other direction or change gears in a way that violates the principle,&#8221; the principle will tell you, &#8220;Don&#8217;t do that.&#8221;<\/p>\n<p>If you don&#8217;t understand the principles at all, you end up with these crazy things. It started off with a stand\u2011up that looked great, and it turned into this crazy six\u2011hour meeting three days a week because, whatever was painful.<\/p>\n<p><strong>Clayton<\/strong>: \u00a0It reminds a lot. I remember taking calculus and, Roy will probably correct me, but we were doing something with differentials or integrals or something where the example&#8230;<\/p>\n<p><strong>Roy<\/strong>: \u00a0Because I&#8217;m a math whiz?<\/p>\n<p><strong>Clayton<\/strong>: \u00a0I don&#8217;t know. You know the factorials.<\/p>\n<p>[laughter]<\/p>\n<p><strong>Clayton<\/strong>: \u00a0The examples that we did in homework and in the class, we did literally hundreds of these examples. There was always a boat living in a dock. You have to figure out where the path of the boat will be, and then we take the test.<\/p>\n<p>The two things on the test, one was a finance question like price forecasting, and the other one was a physics question. I think everyone was like, &#8220;What the fuck?&#8221;<\/p>\n<p><strong>Roy<\/strong>: \u00a0Where&#8217;s the boat?<\/p>\n<p><strong>Clayton<\/strong>: \u00a0There&#8217;s no boat.<\/p>\n<p>[laughter]<\/p>\n<p><strong>Roy<\/strong>: \u00a0I can only do calculus for boats.<\/p>\n<p><strong>Clayton<\/strong>: \u00a0Exactly, right?<\/p>\n<p>[laughter]<\/p>\n<p><strong>Clayton<\/strong>: \u00a0We did all this stuff where we are practicing this thing. Even the variables turned into features of the boat. Then when it got to, &#8220;Wow. You can really apply this to anything,&#8221; it&#8217;s like, &#8220;Well, it doesn&#8217;t fit the boat requirement.&#8221; I feel like that happens a lot. We didn&#8217;t understand the principle of what we were actually trying to do. All we understood was the practice of the boat.<\/p>\n<p>Peer programming, I think a lot of people that do the practice view it as like two coders writing code together side by side with a keyboard or two keyboards.<\/p>\n<p>I think if you understand the principles of maybe why you&#8217;re doing that, you can expand that into other things, or maybe there&#8217;s not two coders, or maybe there&#8217;s people that aren&#8217;t doing any code whatsoever but they can still pair on something.<\/p>\n<p><strong>Roy<\/strong>: \u00a0Absolutely.<\/p>\n<p><strong>Jade<\/strong>: \u00a0Real quick, looking back on your Agile journey, what do you think was most important to you? The principles or the practices?<\/p>\n<p><strong>Clayton<\/strong>: \u00a0Like I said at the beginning, I am a principles person by nature, so I would say the principles.<\/p>\n<p><strong>Roy<\/strong>: \u00a0I think the principles are what attracted me to it but I think the practices are what kept me going long enough to stick with it.<\/p>\n<p><strong>Derek<\/strong>: \u00a0I think it was the opposite for me where I didn&#8217;t know about any of the principles before I started the practices. I was very interested, especially with some of the XP practices, where I only knew them by name and a basic idea of how it was supposed to work.<\/p>\n<p>I was very much focused on the how and got very into that. It took me a lot of time before I started caring about the why. I would say the principles over time have become way more important.<\/p>\n<p><strong>Jade<\/strong>: \u00a0That&#8217;s all the time we have for today. Thanks for listening.<\/p>\n<p>[music]<\/p>\n<p><strong>Announcer 1<\/strong>: \u00a0Is there something you&#8217;d like to hear in a future episode? Head over to integrumtech.com\/podcast where you can suggest a topic or a guest.<\/p>\n<p><strong>Announcer 2<\/strong>: \u00a0Looking for an easy way to stay up\u2011to\u2011date with the latest news, techniques, and events in the Agile community? Sign up today at agileweekly.com. It&#8217;s the best Agile content delivered weekly for free.<\/p>\n<p><strong>Announcer 1<\/strong>: \u00a0The Agile Weekly Podcast is brought to you by Integrum Technologies and recorded at Gangplank Studios in Chandler, Arizona. For old episodes, check out integrumtech.com or subscribe on iTunes.<\/p>\n<p><strong>Roy<\/strong>: \u00a0Need help with your Agile transition? Have a question and need to phone a friend? Try calling the Agile Hotline. It&#8217;s free. Call 866\u2011244\u20118656&#8230;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Derek Neighbors, Jade Meskill, Clayton Lengel-Zigich, and Roy van de Water discuss: What is more important, principles or practices? Transcript Jade Meskill: \u00a0Hello welcome to &hellip;<\/p>\n","protected":false},"author":10,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[56,70,115,173],"_links":{"self":[{"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/posts\/7608"}],"collection":[{"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/users\/10"}],"replies":[{"embeddable":true,"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/comments?post=7608"}],"version-history":[{"count":1,"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/posts\/7608\/revisions"}],"predecessor-version":[{"id":7642,"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/posts\/7608\/revisions\/7642"}],"wp:attachment":[{"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/media?parent=7608"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/categories?post=7608"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/integrumtech.com\/wp-json\/wp\/v2\/tags?post=7608"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}